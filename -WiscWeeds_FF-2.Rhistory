tiff(file="C:/Users/felip/OneDrive - UW-Madison/Documents/GitHub/FFaleco/PhD/PhD Projects/Waterhemp/Metabolism Inhibitors/GH/Mesotrione/Mesotrione_Absolute ED/GH_2Meso Only_All Pops_DR Biomass.tiff",
width = 10, height = 8, units = "in", res = 600, compression = "lzw")
par(mar = c(5,5,1,1))
plot(model.W1.3,
type = "average",
xlab = expression(paste("Mesotrione rate (g ai ha"^-1, ")")),
ylab = expression(paste("Biomass (g plant"^-1, ")")),
ylim = c(0, 4),
#broken = T,
col = c("darkgreen", "red", "navy", "orange"),
pch = c(19, 17, 15, 18),
cex = 1.5,
cex.axis = 1.3,
cex.lab = 1.9,
cex.legend = 2.0,
legendPos = c(600, 4.0),
lwd = 1.5)
points(x = c(ED50.A82[1, 1],
ED50.A101[1, 1],
ED50.A103[1, 1],
ED50.A75[1, 1]),
y = c((summary(model.W1.3)$coefficients[5, 1]/2),
(summary(model.W1.3)$coefficients[6, 1]/2),
(summary(model.W1.3)$coefficients[7, 1]/2),
(summary(model.W1.3)$coefficients[8, 1]/2)),
pch = 8,
cex = 1.3)
#abline(v = 1065,
#lwd = 2,
#lty = "twodash",
#col = "black")
#text(x = 4500, y = 2.0,
#labels = expression(paste("ED"[50] ~ "A101 = 297.6 ("%+-% "61.7)" ^A)),
#cex = 1.0,
#col = "black",
#font = 2)
#text(x = 4200, y = 1.8,
#labels = expression(paste("ED"[50] ~ "A75 = 111.6 ("%+-% "25.8)" ^B)),
#cex = 1.0,
#col = "black",
#font = 2)
#text(x = 4200, y = 1.6,
#labels = expression(paste("ED"[50] ~ "A82 = 104.7 ("%+-% "21.5)" ^B)),
#cex = 1.0,
#col = "black",
#font = 2)
#text(x = 4200, y = 1.4,
#labels = expression(paste("ED"[50] ~ "A103 = 55.2 ("%+-% "12.3)" ^C)),
#cex = 1.0,
#col = "black",
#font = 2)
#text(x = 3200, y = 0.7,
#labels = expression("1x rate: 1065 g ae ha" ^-1),
#cex = 1.0,
#col = "black",
#font = 2)
dev.off()
summary(model.W1.3)
modelFit(model.W1.3)
knitr::opts_chunk$set(echo = TRUE)
library(drc)
library(doBy)
library(plotrix)
library(dplyr)
data <- read.csv("Data Sheet_Meso_GH.csv")
str(data)
data_A101 <- data %>% filter(pop == "A101")
View(data_A101)
fun <- function(x){
c( mean = mean(x), VAR = var(x), SD = sd(x), SE = std.error(x), n = length(x))
}
View(data_A101)
summary.meso <- summaryBy(cbind(biomass) ~ herb + rate, data = subset(data_A101, herb=="meso"),
FUN=fun)
summary.meso_GST <- summaryBy(cbind(biomass) ~ herb + rate, data = subset(data_A101, herb=="meso+GST"),
FUN=fun)
summary.meso_P450 <- summaryBy(cbind(biomass) ~ herb + rate, data = subset(data_A101, herb=="meso+P450"),
FUN=fun)
model.LL4 <- drm(biomass ~ rate, herb, fct = LL.4(), data = data_A101, type = "continuous")
plot(fitted(model.LL4), residuals(model.LL4))
modelFit(model.LL4) # higher the p-value, better.
summary(model.LL4)
mselect(model.LL4,  list(L.3(), L.4(), L.5(), LL.2(), LL.3(), LL.3u(), LL.4(), LL.5(), W1.2(), W1.3(), W1.4(), W2.2(), W2.3(), W2.4(), BC.4(), BC.5(), LL2.2(), LL2.3(), LL2.3u(), LL2.4(), LL2.5(), AR.2(), AR.3(), MM.2(), MM.3(), baro5()), linreg = T)
model.W1.3 <- drm(biomass ~ rate, herb, fct = W1.3(), data = data_A101, type = "continuous")
plot(fitted(model.W1.3), residuals(model.W1.3))
modelFit(model.W1.3)
summary(model.W1.3)
anova(model.W1.3, model.LL4) # p-value > 0.05 means that there is no difference between models. Therefore, we can use model W1.3
summary(model.W1.3)
#ED(model.W1.3, c(50), type = "relative", interval = "delta")
ED50.meso <- ED(model.W1.3, (summary(model.W1.3)$coefficients[4, 1] * 0.5), clevel = "meso", type = "absolute", interval = "delta")
ED50.meso.P450 <- ED(model.W1.3, (summary(model.W1.3)$coefficients[5, 1] * 0.5), clevel = "meso+P450", type = "absolute", interval = "delta")
ED50.meso.GST <- ED(model.W1.3, (summary(model.W1.3)$coefficients[6, 1] * 0.5), clevel = "meso+GST", type = "absolute", interval = "delta")
# In this case, fitting relative and absolute resulted in the same ED50. Perhaps because W1.3 has a lower limit = 0. In simulations using the W1.4, then the relative and absolute ED50 are different.
EDcomp(model.W1.3, c((summary(model.W1.3)$coefficients[4, 1] * 0.5),
(summary(model.W1.3)$coefficients[5, 1] * 0.5)),
compMatch = c("meso", "meso+P450"), type = "absolute", interval = "none", reverse = T)
EDcomp(model.W1.3, c((summary(model.W1.3)$coefficients[4, 1] * 0.5),
(summary(model.W1.3)$coefficients[6, 1] * 0.5)),
compMatch = c("meso", "meso+GST"), type = "absolute", interval = "none", reverse = T)
#EDcomp(model.W1.3, c(50, 50), type = "relative", interval = "none", reverse = F)
EDcomp(model.W1.3, c((summary(model.W1.3)$coefficients[4, 1] * 0.5),
(summary(model.W1.3)$coefficients[5, 1] * 0.5)),
compMatch = c("meso", "meso+P450"), type = "absolute", interval = "none", reverse = T)
EDcomp(model.W1.3, c((summary(model.W1.3)$coefficients[4, 1] * 0.5),
(summary(model.W1.3)$coefficients[6, 1] * 0.5)),
compMatch = c("meso", "meso+GST"), type = "absolute", interval = "none", reverse = T)
# Comparing b parameter (slope)
compParm(model.W1.3, strVal = "b", operator = "-")
# Comparing d parameter (upper limit)
compParm(model.W1.3, strVal = "d", operator = "-")
# Comparing e parameter (Infletion Point)
compParm(model.W1.3, strVal = "e", operator = "-") # Remember that for assymetric models, the paramenter"e" does not reflect the ED50.
tiff(file="C:/Users/felip/OneDrive - UW-Madison/Documents/GitHub/FFaleco/PhD/PhD Projects/Waterhemp/Metabolism Inhibitors/GH/2,4-D/2,4-D_Absolute ED/GH_Meso_A101_DR Biomass.tiff",
width = 10, height = 8, units = "in", res = 600, compression = "lzw")
par(mar = c(5,5,1,1))
plot(model.W1.3,
type = "average",
xlab = expression(paste("Mesotrione rate (g ai ha"^-1, ")")),
ylab = expression(paste("A101 Biomass (g plant"^-1, ")")),
ylim = c(0, 4),
#broken = T,
col = c("darkgreen", "red", "navy"),
pch = c(19, 17, 15),
cex = 1.5,
cex.axis = 1.3,
cex.lab = 1.9,
cex.legend = 2.0,
legendPos = c(600, 4.0),
lwd = 1.5)
points(x = c(ED50.meso[1, 1],
ED50.meso.P450[1, 1],
ED50.meso.GST[1, 1]),
y = c((summary(model.W1.3)$coefficients[4, 1]/2),
(summary(model.W1.3)$coefficients[5, 1]/2),
(summary(model.W1.3)$coefficients[6, 1]/2)),
pch = 8,
cex = 1.3)
#abline(v = 1065,
#lwd = 2,
#lty = "twodash",
#col = "black")
#text(x = 4800, y = 2.0,
#labels = expression(paste("ED"[50] ~ "2,4-D+GST= 116.6 ("%+-% "37.4)" ^A)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 5200, y = 1.8,
#labels = expression(paste("ED"[50] ~ "2,4-D+P450= 193.0 ("%+-% "63.8)" ^AB)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 3800, y = 1.6,
#labels = expression(paste("ED"[50] ~ "2,4-D= 297.6 ("%+-% "68.6)" ^B)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 3200, y = 0.9,
#labels = expression("1x rate: 1065 g ae ha" ^-1),
#cex = 0.95,
#col = "black",
#font = 2)
dev.off()
tiff(file="C:/Users/felip/OneDrive - UW-Madison/Documents/GitHub/FFaleco/PhD/PhD Projects/Waterhemp/Metabolism Inhibitors/GH/Mesotrione/Mesotrione_Absolute ED/GH_Meso_A101_DR Biomass.tiff",
width = 10, height = 8, units = "in", res = 600, compression = "lzw")
par(mar = c(5,5,1,1))
plot(model.W1.3,
type = "average",
xlab = expression(paste("Mesotrione rate (g ai ha"^-1, ")")),
ylab = expression(paste("A101 Biomass (g plant"^-1, ")")),
ylim = c(0, 4),
#broken = T,
col = c("darkgreen", "red", "navy"),
pch = c(19, 17, 15),
cex = 1.5,
cex.axis = 1.3,
cex.lab = 1.9,
cex.legend = 2.0,
legendPos = c(600, 4.0),
lwd = 1.5)
points(x = c(ED50.meso[1, 1],
ED50.meso.P450[1, 1],
ED50.meso.GST[1, 1]),
y = c((summary(model.W1.3)$coefficients[4, 1]/2),
(summary(model.W1.3)$coefficients[5, 1]/2),
(summary(model.W1.3)$coefficients[6, 1]/2)),
pch = 8,
cex = 1.3)
#abline(v = 1065,
#lwd = 2,
#lty = "twodash",
#col = "black")
#text(x = 4800, y = 2.0,
#labels = expression(paste("ED"[50] ~ "2,4-D+GST= 116.6 ("%+-% "37.4)" ^A)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 5200, y = 1.8,
#labels = expression(paste("ED"[50] ~ "2,4-D+P450= 193.0 ("%+-% "63.8)" ^AB)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 3800, y = 1.6,
#labels = expression(paste("ED"[50] ~ "2,4-D= 297.6 ("%+-% "68.6)" ^B)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 3200, y = 0.9,
#labels = expression("1x rate: 1065 g ae ha" ^-1),
#cex = 0.95,
#col = "black",
#font = 2)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(drc)
library(doBy)
library(plotrix)
library(dplyr)
data <- read.csv("Data Sheet_Meso_GH.csv")
str(data)
data_A82 <- data %>% filter(pop == "A82")
View(data_A82)
fun <- function(x){
c( mean = mean(x), VAR = var(x), SD = sd(x), SE = std.error(x), n = length(x))
}
fun <- function(x){
c( mean = mean(x), VAR = var(x), SD = sd(x), SE = std.error(x), n = length(x))
}
summary.meso <- summaryBy(cbind(biomass) ~ herb + rate, data = subset(data_A82, herb=="meso"),
FUN=fun)
summary.meso_GST <- summaryBy(cbind(biomass) ~ herb + rate, data = subset(data_A82, herb=="meso+GST"),
FUN=fun)
summary.meso_P450 <- summaryBy(cbind(biomass) ~ herb + rate, data = subset(data_A82, herb=="meso+P450"),
FUN=fun)
View(summary.meso_P450)
model.LL4 <- drm(biomass ~ rate, herb, fct = LL.4(), data = data_A82, type = "continuous")
plot(fitted(model.LL4), residuals(model.LL4))
modelFit(model.LL4) # higher the p-value, better.
mselect(model.LL4,  list(L.3(), L.4(), L.5(), LL.2(), LL.3(), LL.3u(), LL.4(), LL.5(), W1.2(), W1.3(), W1.4(), W2.2(), W2.3(), W2.4(), BC.4(), BC.5(), LL2.2(), LL2.3(), LL2.3u(), LL2.4(), LL2.5(), AR.2(), AR.3(), MM.2(), MM.3(), baro5()), linreg = T)
model.W1.3 <- drm(biomass ~ rate, herb, fct = W1.3(), data = data_A82, type = "continuous")
plot(fitted(model.W1.3), residuals(model.W1.3))
modelFit(model.W1.3)
#ED(model.W1.3, c(50), type = "relative", interval = "delta")
ED50.meso <- ED(model.W1.3, (summary(model.W1.3)$coefficients[4, 1] * 0.5), clevel = "meso", type = "absolute", interval = "delta")
ED50.meso.P450 <- ED(model.W1.3, (summary(model.W1.3)$coefficients[5, 1] * 0.5), clevel = "meso+P450", type = "absolute", interval = "delta")
ED50.meso.GST <- ED(model.W1.3, (summary(model.W1.3)$coefficients[6, 1] * 0.5), clevel = "meso+GST", type = "absolute", interval = "delta")
# In this case, fitting relative and absolute resulted in the same ED50. Perhaps because W1.3 has a lower limit = 0. In simulations using the W1.4, then the relative and absolute ED50 are different.
EDcomp(model.W1.3, c((summary(model.W1.3)$coefficients[4, 1] * 0.5),
(summary(model.W1.3)$coefficients[5, 1] * 0.5)),
compMatch = c("meso", "meso+P450"), type = "absolute", interval = "none", reverse = T)
EDcomp(model.W1.3, c((summary(model.W1.3)$coefficients[4, 1] * 0.5),
(summary(model.W1.3)$coefficients[6, 1] * 0.5)),
compMatch = c("meso", "meso+GST"), type = "absolute", interval = "none", reverse = T)
#EDcomp(model.W1.3, c(50, 50), type = "relative", interval = "none", reverse = F)
EDcomp(model.W1.3, c((summary(model.W1.3)$coefficients[4, 1] * 0.5),
(summary(model.W1.3)$coefficients[5, 1] * 0.5)),
compMatch = c("meso", "meso+P450"), type = "absolute", interval = "none", reverse = T)
EDcomp(model.W1.3, c((summary(model.W1.3)$coefficients[4, 1] * 0.5),
(summary(model.W1.3)$coefficients[6, 1] * 0.5)),
compMatch = c("meso", "meso+GST"), type = "absolute", interval = "none", reverse = T)
# Comparing b parameter (slope)
compParm(model.W1.3, strVal = "b", operator = "-")
# Comparing d parameter (upper limit)
compParm(model.W1.3, strVal = "d", operator = "-")
# Comparing e parameter (Infletion Point)
compParm(model.W1.3, strVal = "e", operator = "-") # Remember that for assymetric models, the paramenter"e" does not reflect the ED50.
tiff(file="C:/Users/felip/OneDrive - UW-Madison/Documents/GitHub/FFaleco/PhD/PhD Projects/Waterhemp/Metabolism Inhibitors/GH/Mesotrione/Mesotrione_Absolute ED/GH_Meso_A82_DR Biomass.tiff",
width = 10, height = 8, units = "in", res = 600, compression = "lzw")
par(mar = c(5,5,1,1))
plot(model.W1.3,
type = "average",
xlab = expression(paste("Mesotrione rate (g ai ha"^-1, ")")),
ylab = expression(paste("A82 Biomass (g plant"^-1, ")")),
ylim = c(0, 4),
#broken = T,
col = c("darkgreen", "red", "navy"),
pch = c(19, 17, 15),
cex = 1.5,
cex.axis = 1.3,
cex.lab = 1.9,
cex.legend = 2.0,
legendPos = c(600, 4.0),
lwd = 1.5)
points(x = c(ED50.meso[1, 1],
ED50.meso.P450[1, 1],
ED50.meso.GST[1, 1]),
y = c((summary(model.W1.3)$coefficients[4, 1]/2),
(summary(model.W1.3)$coefficients[5, 1]/2),
(summary(model.W1.3)$coefficients[6, 1]/2)),
pch = 8,
cex = 1.3)
#abline(v = 1065,
#lwd = 2,
#lty = "twodash",
#col = "black")
#text(x = 4800, y = 2.0,
#labels = expression(paste("ED"[50] ~ "2,4-D+GST= 116.6 ("%+-% "37.4)" ^A)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 5200, y = 1.8,
#labels = expression(paste("ED"[50] ~ "2,4-D+P450= 193.0 ("%+-% "63.8)" ^AB)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 3800, y = 1.6,
#labels = expression(paste("ED"[50] ~ "2,4-D= 297.6 ("%+-% "68.6)" ^B)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 3200, y = 0.9,
#labels = expression("1x rate: 1065 g ae ha" ^-1),
#cex = 0.95,
#col = "black",
#font = 2)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(drc)
library(doBy)
library(plotrix)
library(dplyr)
data <- read.csv("Data Sheet_Meso_GH.csv")
str(data)
data_A75 <- data %>% filter(pop == "A75")
View(data_A75)
fun <- function(x){
c( mean = mean(x), VAR = var(x), SD = sd(x), SE = std.error(x), n = length(x))
}
summary.meso <- summaryBy(cbind(biomass) ~ herb + rate, data = subset(data_A75, herb=="meso"),
FUN=fun)
summary.meso_GST <- summaryBy(cbind(biomass) ~ herb + rate, data = subset(data_A75, herb=="meso+GST"),
FUN=fun)
summary.meso_P450 <- summaryBy(cbind(biomass) ~ herb + rate, data = subset(data_A75, herb=="meso+P450"),
FUN=fun)
View(summary.meso_P450)
model.LL4 <- drm(biomass ~ rate, herb, fct = LL.4(), data = data_A75, type = "continuous")
plot(fitted(model.LL4), residuals(model.LL4))
modelFit(model.LL4) # higher the p-value, better.
summary(model.LL4)
mselect(model.LL4,  list(L.3(), L.4(), L.5(), LL.2(), LL.3(), LL.3u(), LL.4(), LL.5(), W1.2(), W1.3(), W1.4(), W2.2(), W2.3(), W2.4(), BC.4(), BC.5(), LL2.2(), LL2.3(), LL2.3u(), LL2.4(), LL2.5(), AR.2(), AR.3(), MM.2(), MM.3(), baro5()), linreg = T)
model.W1.3 <- drm(biomass ~ rate, herb, fct = W1.3(), data = data_A75, type = "continuous")
plot(fitted(model.W1.3), residuals(model.W1.3))
modelFit(model.W1.3)
summary(model.W1.3)
anova(model.W1.3, model.LL4) # p-value > 0.05 means that there is no difference between models. Therefore, we can use model W1.3
summary(model.W1.3)
#ED(model.W1.3, c(50), type = "relative", interval = "delta")
ED50.meso <- ED(model.W1.3, (summary(model.W1.3)$coefficients[4, 1] * 0.5), clevel = "meso", type = "absolute", interval = "delta")
ED50.meso.P450 <- ED(model.W1.3, (summary(model.W1.3)$coefficients[5, 1] * 0.5), clevel = "meso+P450", type = "absolute", interval = "delta")
ED50.meso.GST <- ED(model.W1.3, (summary(model.W1.3)$coefficients[6, 1] * 0.5), clevel = "meso+GST", type = "absolute", interval = "delta")
# In this case, fitting relative and absolute resulted in the same ED50. Perhaps because W1.3 has a lower limit = 0. In simulations using the W1.4, then the relative and absolute ED50 are different.
#EDcomp(model.W1.3, c(50, 50), type = "relative", interval = "none", reverse = F)
EDcomp(model.W1.3, c((summary(model.W1.3)$coefficients[4, 1] * 0.5),
(summary(model.W1.3)$coefficients[5, 1] * 0.5)),
compMatch = c("meso", "meso+P450"), type = "absolute", interval = "none", reverse = T)
EDcomp(model.W1.3, c((summary(model.W1.3)$coefficients[4, 1] * 0.5),
(summary(model.W1.3)$coefficients[6, 1] * 0.5)),
compMatch = c("meso", "meso+GST"), type = "absolute", interval = "none", reverse = T)
# Comparing b parameter (slope)
compParm(model.W1.3, strVal = "b", operator = "-")
# Comparing d parameter (upper limit)
compParm(model.W1.3, strVal = "d", operator = "-")
# Comparing e parameter (Infletion Point)
compParm(model.W1.3, strVal = "e", operator = "-") # Remember that for assymetric models, the paramenter"e" does not reflect the ED50.
tiff(file="C:/Users/felip/OneDrive - UW-Madison/Documents/GitHub/FFaleco/PhD/PhD Projects/Waterhemp/Metabolism Inhibitors/GH/Mesotrione/Mesotrione_Absolute ED/GH_Meso_A75_DR Biomass.tiff",
width = 10, height = 8, units = "in", res = 600, compression = "lzw")
par(mar = c(5,5,1,1))
plot(model.W1.3,
type = "average",
xlab = expression(paste("Mesotrione rate (g ai ha"^-1, ")")),
ylab = expression(paste("A75 Biomass (g plant"^-1, ")")),
ylim = c(0, 4),
#broken = T,
col = c("darkgreen", "red", "navy"),
pch = c(19, 17, 15),
cex = 1.5,
cex.axis = 1.3,
cex.lab = 1.9,
cex.legend = 2.0,
legendPos = c(600, 4.0),
lwd = 1.5)
points(x = c(ED50.meso[1, 1],
ED50.meso.P450[1, 1],
ED50.meso.GST[1, 1]),
y = c((summary(model.W1.3)$coefficients[4, 1]/2),
(summary(model.W1.3)$coefficients[5, 1]/2),
(summary(model.W1.3)$coefficients[6, 1]/2)),
pch = 8,
cex = 1.3)
#abline(v = 1065,
#lwd = 2,
#lty = "twodash",
#col = "black")
#text(x = 4800, y = 2.0,
#labels = expression(paste("ED"[50] ~ "2,4-D+GST= 116.6 ("%+-% "37.4)" ^A)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 5200, y = 1.8,
#labels = expression(paste("ED"[50] ~ "2,4-D+P450= 193.0 ("%+-% "63.8)" ^AB)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 3800, y = 1.6,
#labels = expression(paste("ED"[50] ~ "2,4-D= 297.6 ("%+-% "68.6)" ^B)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 3200, y = 0.9,
#labels = expression("1x rate: 1065 g ae ha" ^-1),
#cex = 0.95,
#col = "black",
#font = 2)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(drc)
library(doBy)
library(plotrix)
library(dplyr)
data <- read.csv("Data Sheet_Meso_GH.csv")
str(data)
data_A103 <- data %>% filter(pop == "A103")
View(data_A103)
fun <- function(x){
c( mean = mean(x), VAR = var(x), SD = sd(x), SE = std.error(x), n = length(x))
}
summary.meso <- summaryBy(cbind(biomass) ~ herb + rate, data = subset(data_A103, herb=="meso"),
FUN=fun)
summary.meso_GST <- summaryBy(cbind(biomass) ~ herb + rate, data = subset(data_A103, herb=="meso+GST"),
FUN=fun)
summary.meso_P450 <- summaryBy(cbind(biomass) ~ herb + rate, data = subset(data_A103, herb=="meso+P450"),
FUN=fun)
View(summary.meso_P450)
model.LL4 <- drm(biomass ~ rate, herb, fct = LL.4(), data = data_A103, type = "continuous")
plot(fitted(model.LL4), residuals(model.LL4))
modelFit(model.LL4) # higher the p-value, better.
summary(model.LL4)
mselect(model.LL4,  list(L.3(), L.4(), L.5(), LL.2(), LL.3(), LL.3u(), LL.4(), LL.5(), W1.2(), W1.3(), W1.4(), W2.2(), W2.3(), W2.4(), BC.4(), BC.5(), LL2.2(), LL2.3(), LL2.3u(), LL2.4(), LL2.5(), AR.2(), AR.3(), MM.2(), MM.3(), baro5()), linreg = T)
model.W1.3 <- drm(biomass ~ rate, herb, fct = W1.3(), data = data_A103, type = "continuous")
plot(fitted(model.W1.3), residuals(model.W1.3))
modelFit(model.W1.3)
summary(model.W1.3)
anova(model.W1.3, model.LL4) # p-value > 0.05 means that there is no difference between models. Therefore, we can use model W1.3
summary(model.W1.3)
#ED(model.W1.3, c(50), type = "relative", interval = "delta")
ED50.meso <- ED(model.W1.3, (summary(model.W1.3)$coefficients[4, 1] * 0.5), clevel = "meso", type = "absolute", interval = "delta")
ED50.meso.P450 <- ED(model.W1.3, (summary(model.W1.3)$coefficients[5, 1] * 0.5), clevel = "meso+P450", type = "absolute", interval = "delta")
ED50.meso.GST <- ED(model.W1.3, (summary(model.W1.3)$coefficients[6, 1] * 0.5), clevel = "meso+GST", type = "absolute", interval = "delta")
# In this case, fitting relative and absolute resulted in the same ED50. Perhaps because W1.3 has a lower limit = 0. In simulations using the W1.4, then the relative and absolute ED50 are different.
#EDcomp(model.W1.3, c(50, 50), type = "relative", interval = "none", reverse = F)
EDcomp(model.W1.3, c((summary(model.W1.3)$coefficients[4, 1] * 0.5),
(summary(model.W1.3)$coefficients[5, 1] * 0.5)),
compMatch = c("meso", "meso+P450"), type = "absolute", interval = "none", reverse = T)
EDcomp(model.W1.3, c((summary(model.W1.3)$coefficients[4, 1] * 0.5),
(summary(model.W1.3)$coefficients[6, 1] * 0.5)),
compMatch = c("meso", "meso+GST"), type = "absolute", interval = "none", reverse = T)
# Comparing b parameter (slope)
compParm(model.W1.3, strVal = "b", operator = "-")
# Comparing d parameter (upper limit)
compParm(model.W1.3, strVal = "d", operator = "-")
# Comparing e parameter (Infletion Point)
compParm(model.W1.3, strVal = "e", operator = "-") # Remember that for assymetric models, the paramenter"e" does not reflect the ED50.
tiff(file="C:/Users/felip/OneDrive - UW-Madison/Documents/GitHub/FFaleco/PhD/PhD Projects/Waterhemp/Metabolism Inhibitors/GH/Mesotrione/Mesotrione_Absolute ED/GH_Meso_A103_DR Biomass.tiff",
width = 10, height = 8, units = "in", res = 600, compression = "lzw")
par(mar = c(5,5,1,1))
plot(model.W1.3,
type = "average",
xlab = expression(paste("Mesotrione rate (g ai ha"^-1, ")")),
ylab = expression(paste("A103 Biomass (g plant"^-1, ")")),
ylim = c(0, 4),
#broken = T,
col = c("darkgreen", "red", "navy"),
pch = c(19, 17, 15),
cex = 1.5,
cex.axis = 1.3,
cex.lab = 1.9,
cex.legend = 2.0,
legendPos = c(600, 4.0),
lwd = 1.5)
points(x = c(ED50.meso[1, 1],
ED50.meso.P450[1, 1],
ED50.meso.GST[1, 1]),
y = c((summary(model.W1.3)$coefficients[4, 1]/2),
(summary(model.W1.3)$coefficients[5, 1]/2),
(summary(model.W1.3)$coefficients[6, 1]/2)),
pch = 8,
cex = 1.3)
#abline(v = 1065,
#lwd = 2,
#lty = "twodash",
#col = "black")
#text(x = 4800, y = 2.0,
#labels = expression(paste("ED"[50] ~ "2,4-D+GST= 116.6 ("%+-% "37.4)" ^A)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 5200, y = 1.8,
#labels = expression(paste("ED"[50] ~ "2,4-D+P450= 193.0 ("%+-% "63.8)" ^AB)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 3800, y = 1.6,
#labels = expression(paste("ED"[50] ~ "2,4-D= 297.6 ("%+-% "68.6)" ^B)),
#cex = 0.95,
#col = "black",
#font = 2)
#text(x = 3200, y = 0.9,
#labels = expression("1x rate: 1065 g ae ha" ^-1),
#cex = 0.95,
#col = "black",
#font = 2)
dev.off()
